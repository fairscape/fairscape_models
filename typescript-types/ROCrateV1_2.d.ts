/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Context = {
  [k: string]: unknown;
} | null;
export type Id = string;
export type Name = string;
export type Metadatatype = string | null;
export type Additionaltype = string | null;
export type Author = string | string[];
export type Datepublished = string;
export type Version = string;
export type Description = string;
export type Keywords = string[];
export type Associatedpublication = string | null;
export type Additionaldocumentation = string | null;
export type Format = string;
export type Id1 = string;
export type Generatedby = IdentifierValue | IdentifierValue[] | null;
export type Derivedfrom = IdentifierValue[] | null;
export type Usedbycomputation = IdentifierValue[] | null;
export type Contenturl = string[] | string | null;
export type Id2 = string;
export type Name1 = string;
export type Metadatatype1 = string | null;
export type Additionaltype1 = string | null;
export type Author1 = string;
export type Datemodified = string;
export type Version1 = string;
export type Description1 = string;
export type Associatedpublication1 = string | null;
export type Additionaldocumentation1 = string | null;
export type FileFormat = string;
export type Usedbycomputation1 = IdentifierValue[] | null;
export type Contenturl1 = string | null;
export type Id3 = string;
export type Name2 = string;
export type Metadatatype2 = string | null;
export type Additionaltype2 = string | null;
export type Runby = string;
export type Description2 = string;
export type Datecreated = string;
export type Associatedpublication2 = string | null;
export type Additionaldocumentation2 = string | null;
export type Command = string[] | string | null;
export type Usedsoftware = IdentifierValue[] | null;
export type Useddataset = IdentifierValue[] | null;
export type Generated = IdentifierValue[] | null;
export type Id4 = string;
export type Type = string[];
export type Name3 = string;
export type Description3 = string;
export type Keywords1 = string[];
export type Ispartof = IdentifierValue[];
export type Version2 = string;
export type Haspart = IdentifierValue[];
export type Author2 = string | string[];
export type License = string | null;
export type Associatedpublication3 = string | string[];
export type Conditionsofaccess = string | null;
export type Copyrightnotice = string | null;
export type Id5 = string;
export type Type1 = "CreativeWork";
export type Guid = string;
export type Type2 = string;
export type Name4 = string;
export type Url = string | null;
export type Description4 = string;
export type License1 = string | null;
export type Keywords2 = string[];
export type Published = boolean;
export type Description5 = string;
export type Index = string | number;
export type Type3 = string;
export type ValueUrl = string | null;
export type Pattern = string | null;
export type Type4 = string;
export type MinItems = number | null;
export type MaxItems = number | null;
export type UniqueItems = boolean | null;
export type Type5 = string | null;
export type Additionalproperties = boolean | null;
export type Required = string[] | null;
export type Separator = string | null;
export type Header = boolean | null;
export type Examples =
  | {
      [k: string]: unknown;
    }[]
  | null;
export type Id6 = string;
export type Type6 = string | null;
export type Name5 = string;
export type Identifier = IdentifierPropertyValue[] | null;
export type Type7 = string;
export type Value = string;
export type Name6 = string;
export type Usedby = IdentifierValue[] | null;
export type Description6 = string | null;
export type Id7 = string;
export type Type8 = string | null;
export type Name7 = string;
export type Identifier1 = IdentifierPropertyValue[] | null;
export type Drug = IdentifierValue[] | null;
export type Usedby1 = IdentifierValue[] | null;
export type Description7 = string;
export type Id8 = string;
export type Type9 = string | string[];
export type Graph = (
  | Dataset
  | Software
  | Computation
  | ROCrateMetadataElem
  | ROCrateMetadataFileElem
  | Schema
  | BioChemEntity
  | MedicalCondition
  | GenericMetadataElem
)[];

export interface ROCrateV1_2 {
  "@context": Context;
  "@graph": Graph;
  [k: string]: unknown;
}
export interface Dataset {
  "@id": Id;
  name: Name;
  metadataType?: Metadatatype;
  additionalType?: Additionaltype;
  author: Author;
  datePublished: Datepublished;
  version?: Version;
  description: Description;
  keywords: Keywords;
  associatedPublication?: Associatedpublication;
  additionalDocumentation?: Additionaldocumentation;
  format: Format;
  "evi:Schema"?: IdentifierValue | null;
  generatedBy?: Generatedby;
  derivedFrom?: Derivedfrom;
  usedByComputation?: Usedbycomputation;
  contentUrl?: Contenturl;
  [k: string]: unknown;
}
export interface IdentifierValue {
  "@id": Id1;
  [k: string]: unknown;
}
export interface Software {
  "@id": Id2;
  name: Name1;
  metadataType?: Metadatatype1;
  additionalType?: Additionaltype1;
  author: Author1;
  dateModified: Datemodified;
  version?: Version1;
  description: Description1;
  associatedPublication?: Associatedpublication1;
  additionalDocumentation?: Additionaldocumentation1;
  format: FileFormat;
  usedByComputation?: Usedbycomputation1;
  contentUrl?: Contenturl1;
  [k: string]: unknown;
}
export interface Computation {
  "@id": Id3;
  name: Name2;
  metadataType?: Metadatatype2;
  additionalType?: Additionaltype2;
  runBy: Runby;
  description: Description2;
  dateCreated: Datecreated;
  associatedPublication?: Associatedpublication2;
  additionalDocumentation?: Additionaldocumentation2;
  command?: Command;
  usedSoftware?: Usedsoftware;
  usedDataset?: Useddataset;
  generated?: Generated;
  [k: string]: unknown;
}
/**
 * Metadata Element of ROCrate that represents the crate as a whole
 *
 * Example
 *     ```
 *     {
 *         '@id': 'https://fairscape.net/ark:59852/rocrate-2.cm4ai_chromatin_mda-mb-468_untreated_imageembedfold1_initialrun0.1alpha',
 *         '@type': ['Dataset', 'https://w3id.org/EVI#ROCrate'],
 *         'name': 'Initial integration run',
 *         'description': 'Ideker Lab CM4AI 0.1 alpha MDA-MB-468 untreated chromatin Initial integration run IF Image Embedding IF microscopy images embedding fold1',
 *         'keywords': ['Ideker Lab', 'fold1'],
 *         'isPartOf': [
 *             {'@id': 'ark:/Ideker_Lab'},
 *             {'@id': 'ark:/Ideker_Lab/CM4AI'}
 *             ],
 *         'version': '0.5alpha',
 *         'license': 'https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en',
 *         'associatedPublication': 'Clark T, Schaffer L, Obernier K, Al Manir S, Churas CP, Dailamy A, Doctor Y, Forget A, Hansen JN, Hu M, Lenkiewicz J, Levinson MA, Marquez C, Mohan J, Nourreddine S, Niestroy J, Pratt D, Qian G, Thaker S, Belisle-Pipon J-C, Brandt C, Chen J, Ding Y, Fodeh S, Krogan N, Lundberg E, Mali P, Payne-Foster P, Ratcliffe S, Ravitsky V, Sali A, Schulz W, Ideker T. Cell Maps for Artificial Intelligence: AI-Ready Maps of Human Cell Architecture from Disease-Relevant Cell Lines. BioRXiv 2024.',
 *         'author': ['Test']
 *         'conditionsOfAccess': 'This dataset was created by investigators and staff of the Cell Maps for Artificial Intelligence project (CM4AI - https://cm4ai.org), a Data Generation Project of the NIH Bridge2AI program, and is copyright (c) 2024 by The Regents of the University of California and, for cellular imaging data, by The Board of Trustees of the Leland Stanford Junior University. It is licensed for reuse under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International (CC-BY-NC-SA 4.0) license, whose terms are summarized here: https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en.  Proper attribution credit as required by the license includes citation of the copyright holders and of the attribution parties, which includes citation of the following article: Clark T, Schaffer L, Obernier K, Al Manir S, Churas CP, Dailamy A, Doctor Y, Forget A, Hansen JN, Hu M, Lenkiewicz J, Levinson MA, Marquez C, Mohan J, Nourreddine S, Niestroy J, Pratt D, Qian G, Thaker S, Belisle-Pipon J-C, Brandt C, Chen J, Ding Y, Fodeh S, Krogan N, Lundberg E, Mali P, Payne-Foster P, Ratcliffe S, Ravitsky V, Sali A, Schulz W, Ideker T. Cell Maps for Artificial Intelligence: AI-Ready Maps of Human Cell Architecture from Disease-Relevant Cell Lines. BioRXiv 2024.‚Äù',
 *         'copyrightNotice': 'Copyright (c) 2024 by The Regents of the University of California',
 *         'hasPart': [
 *             {'@id': 'https://fairscape.net/ark:59852/software-cellmaps_image_embedding-N2ux5jg'},
 *             {'@id': 'https://fairscape.net/ark:59852/dataset-cellmaps_image_embedding-output-file-N2ux5jg'},
 *             {'@id': 'https://fairscape.net/ark:59852/dataset-Densenet-model-file-N2ux5jg'},
 *             {'@id': 'https://fairscape.net/ark:59852/computation-IF-Image-Embedding-N2ux5jg'}
 *         ]
 *     }
 *     ```
 */
export interface ROCrateMetadataElem {
  "@id": Id4;
  "@type": Type;
  name: Name3;
  description: Description3;
  keywords: Keywords1;
  isPartOf: Ispartof;
  version: Version2;
  hasPart: Haspart;
  author: Author2;
  license: License;
  associatedPublication?: Associatedpublication3;
  conditionsOfAccess?: Conditionsofaccess;
  copyrightNotice?: Copyrightnotice;
  [k: string]: unknown;
}
/**
 * Metadata Element of an ROCrate cooresponding to the `ro-crate-metadata.json` file itself
 *
 * Example
 *
 *     ```
 *     {
 *         "@id": "ro-crate-metadata.json",
 *         "@type": "CreativeWork",
 *         "conformsTo": {
 *             "@id": "https://w3id.org/ro/crate/1.2-DRAFT"
 *         },
 *         "about": {
 *             "@id": "https://fairscape.net/ark:59852/rocrate-2.cm4ai_chromatin_mda-mb-468_untreated_apmsembed_initialrun0.1alpha"
 *         }
 *     }
 *     ```
 */
export interface ROCrateMetadataFileElem {
  "@id": Id5;
  "@type": Type1;
  conformsTo: IdentifierValue;
  about: IdentifierValue;
  [k: string]: unknown;
}
export interface Schema {
  "@id": Guid;
  "@type"?: Type2;
  name: Name4;
  "@context"?: Context1;
  url?: Url;
  description: Description4;
  license?: License1;
  keywords?: Keywords2;
  published?: Published;
  properties: Properties;
  type?: Type5;
  additionalProperties?: Additionalproperties;
  required?: Required;
  separator?: Separator;
  header?: Header;
  examples?: Examples;
  [k: string]: unknown;
}
export interface Context1 {
  [k: string]: string;
}
export interface Properties {
  [k: string]: Property;
}
export interface Property {
  description: Description5;
  index: Index;
  type: Type3;
  "value-url"?: ValueUrl;
  pattern?: Pattern;
  items?: Item | null;
  "min-items"?: MinItems;
  "max-items"?: MaxItems;
  "unique-items"?: UniqueItems;
  [k: string]: unknown;
}
export interface Item {
  type: Type4;
  [k: string]: unknown;
}
/**
 * Pydantic model for the Schema.org BioChemEntity datatype
 *
 * This class can apply to Protiens, Genes, Chemical Entities, or Biological Samples
 */
export interface BioChemEntity {
  "@id": Id6;
  "@type"?: Type6;
  name: Name5;
  identifier?: Identifier;
  associatedDisease?: IdentifierValue | null;
  usedBy?: Usedby;
  description?: Description6;
  [k: string]: unknown;
}
export interface IdentifierPropertyValue {
  "@type"?: Type7;
  value: Value;
  name: Name6;
  [k: string]: unknown;
}
/**
 * Pydantic model for the Schema.org MedicalCondition datatype
 *
 * This class represents any condition of the human body that affects the normal functioning of a person, whether physically or mentally. Includes diseases, injuries, disabilities, disorders, syndromes, etc.
 */
export interface MedicalCondition {
  "@id": Id7;
  "@type"?: Type8;
  name: Name7;
  identifier?: Identifier1;
  drug?: Drug;
  usedBy?: Usedby1;
  description: Description7;
  [k: string]: unknown;
}
/**
 * Generic Metadata Element of an ROCrate
 */
export interface GenericMetadataElem {
  "@id": Id8;
  "@type": Type9;
  [k: string]: unknown;
}
